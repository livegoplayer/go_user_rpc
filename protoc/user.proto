syntax = "proto3";
package user_grpc;

import "github.com/mwitkow/go-proto-validators/validator.proto";

option go_package = "user/user_grpc";

service User{
    //用户登录
    rpc Login(LoginRequest) returns (LoginResponse);
    //用户注销
    rpc Logout(LogoutRequest) returns (LogoutResponse);
    //管理员增加用户
    rpc AddUser(AddUserRequest) returns (AddUserResponse);
    //管理员删除用户
    rpc DelUser(DelUserRequest) returns (DelUserResponse);
    //获取用户列表
    rpc GetUserList(GetUserListRequest) returns (GetUserListResponse);
    //检查用户登陆状态
    rpc	CheckUserStatus(CheckUserStatusRequest) returns (CheckUserStatusResponse);
    //注册
    rpc	Register(RegisterRequest) returns (RegisterResponse);
    //检查用户操作权限
    rpc	CheckUserAuthority(CheckUserAuthorityRequest) returns (CheckUserAuthorityResponse);
    //获取用户操作权限列表
    rpc	GetUserAuthorityList(GetUserAuthorityListRequest) returns (GetUserAuthorityListResponse);
    //获取所有操作权限
    rpc	GetAuthorityList(GetAuthorityListRequest) returns (GetAuthorityListResponse);
    //增加用户权限
    rpc	AddUserRole(AddUserRoleRequest) returns (AddUserRoleResponse);
    //删除用户权限
    rpc	DelUserRole(DelUserRoleRequest) returns (DelUserRoleResponse);
    //获取所有角色列表
    rpc	GetRoleList(GetRoleListRequest) returns (GetRoleListResponse);
    //获取用户角色列表
    rpc	GetUserRoleList(GetUserRoleListRequest) returns (GetUserRoleListResponse);
}

//用户session信息数组
message UserSessions {
	int64                 uid = 1;
	string              username = 2;
	map<int64, string>    userRoleList = 3;
	map<int64, string>    userAuthorityList = 4;
	string              addDatetime = 5;
	string              updateDatetime = 6;
}

//login
message LoginRequest {
    string          userName = 1 [(validator.field) = {string_not_empty: 0}];
    string          password = 2 [(validator.field) = {string_not_empty: 0}];
}

message LoginData{
    int64            uid = 1;
    string          token = 2;
    UserSessions    userSession = 3;
    string          error = 4;
}

message LoginResponse{
    int64           errorCode = 1;
    LoginData       data = 2;
    string          msg = 3;
}

//addUser
message AddUserRequest {
    string          userName = 1 [(validator.field) = {string_not_empty: 0}];
    string          password = 2 [(validator.field) = {string_not_empty: 0}];
    int64           operationUid = 3;
}

message AddUserData{
    int64           uid = 1;
    string          error = 2;
}

message AddUserResponse{
    int64           errorCode = 1;
    AddUserData       data = 2;
    string          msg = 3;
}

//deluser
message DelUserRequest{
    int64             uid = 1 [(validator.field) = {int_gt: 0}];
    int64             operationUid = 3;
}

message DelUserData{
    bool            success =1;
    string          error = 2;
}

message DelUserResponse{
    int64           errorCode = 1;
    DelUserData       data = 2;
    string          msg = 3;
}

message GetUserListRequest{
    int64 page=1 [(validator.field) = {int_gt: 0}];
    int64 size=2 [(validator.field) = {int_gt: 0}];
}

message GetUserListResponse{
    int64           errorCode = 1;
    GetUserListData data = 2;
    string          msg = 3;
}

message GetUserListData{
    repeated UserInfo userList= 1;
    int64 total=2;
}

message UserInfo{
    int64 id = 1;
    string username = 2;
    string addDataTime = 3;
    string uptDatetime = 4;
}

//检查用户登录状态
message CheckUserStatusRequest {
    string          token = 1 [(validator.field) = {string_not_empty: 0}];
}

message CheckUserStatusData{
    bool           isLogin = 1;
    string          token = 2;
    UserSessions    userSession = 3;
    string          error = 4;
}

message CheckUserStatusResponse{
    int64           errorCode = 1;
    CheckUserStatusData       data = 2;
    string          msg = 3;
}


//注册
message RegisterRequest {
    string          username = 1 [(validator.field) = {string_not_empty: 0}];
    string          password = 2 [(validator.field) = {string_not_empty: 0}];
}

message RegisterData{
    int64             uid = 1;
    string          error = 2;
}

message RegisterResponse{
    int64           errorCode = 1;
    RegisterData       data = 2;
    string          msg = 3;
}

//检查用户操作权限
message CheckUserAuthorityRequest {
    int64             uid= 1 [(validator.field) = {int_gt: 0}];
    int64             authorityId = 2 [(validator.field) = {int_gt: 0}];
}

message CheckUserAuthorityData{
    bool            exist = 1;
}

message CheckUserAuthorityResponse{
    int64           errorCode = 1;
    CheckUserAuthorityData       data = 2;
    string          msg = 3;
}

//获取用户操作权限列表
message GetUserAuthorityListRequest{
    int64             uid = 1 [(validator.field) = {int_gt: 0}];
}

message GetUserAuthorityListData{
    map<int64, string> userAuthorityList = 1;
}

message GetUserAuthorityListResponse{
    int64           errorCode= 1;
    GetUserAuthorityListData       data = 2;
    string          msg = 3;
}

//获取所有操作权限列表
message GetAuthorityListRequest{
}

message GetAuthorityListData{
    map<int64, string> userAuthorityList = 1;
}

message GetAuthorityListResponse{
    int64           errorCode= 1;
    GetAuthorityListData       data = 2;
    string          msg = 3;
}

//增加用户权限
message AddUserRoleRequest{
    int64             uid = 1 [(validator.field) = {int_gt: 0}];
    int64             roleId = 2 [(validator.field) = {int_gt: 0}];
    int64             operationUid =3;
}

message AddUserRoleData{
    bool            success = 1;
}

message AddUserRoleResponse{
    int64           errorCode = 1;
    AddUserRoleData       data = 2;
    string          msg = 3;
}

//删除用户权限
message DelUserRoleRequest{
    int64             uid = 1 [(validator.field) = {int_gt: 0}];
    int64             roleId = 2 [(validator.field) = {int_gt: 0}];
    int64             operationUid = 3;
}

message DelUserRoleData{
    bool            success =1;
}

message DelUserRoleResponse{
    int64           errorCode = 1;
    DelUserRoleData       data = 2;
    string          msg = 3;
}

//获取所有角色列表
message GetRoleListRequest{
}

message GetRoleListData{
    map<int64, string> userRoleList =1;
}

message GetRoleListResponse{
    int64           errorCode = 1;
    GetRoleListData       data = 2;
    string          msg = 3;
}

//获取用户角色列表
message GetUserRoleListRequest{
    int64              uid =1 [(validator.field) = {int_gt: 0}];
}

message GetUserRoleListData{
    map<int64, string> userRoleList =1;
}

message GetUserRoleListResponse{
    int64           errorCode = 1;
    GetUserRoleListData       data = 2;
    string          msg = 3;
}

message LogoutRequest{
    int64 uid = 1 [(validator.field) = {int_gt: 0}];
}

message LogoutResponse{
    int64           errorCode = 1;
    LogoutData      data = 2;
    string          msg = 3;
}

message LogoutData{
    bool success = 1;
}





